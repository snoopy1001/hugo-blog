<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Yang Xu&#39;s Blog</title>
    <link>https://xy19950225.github.io/hugo-blog/post/</link>
    <description>Recent content in Posts on Yang Xu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Yang Xu</copyright>
    <lastBuildDate>Thu, 29 Oct 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xy19950225.github.io/hugo-blog/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[笔记] Typora 自动上传图片</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-30-%E7%AC%94%E8%AE%B0-typora-%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/</link>
      <pubDate>Thu, 29 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-30-%E7%AC%94%E8%AE%B0-typora-%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/</guid>
      <description>1 前言 尝试了众多 Markdown 编辑器后，Typora 给我带来了良好的体验，让我更专注于写作。它最大的特点是：所见即所得，无须分屏预览。除此之外，还有很多</description>
    </item>
    
    <item>
      <title>[笔记] pandas from_dict</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-pandas-from_dict/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-pandas-from_dict/</guid>
      <description>介绍 官方文档 示例 默认情况下，字典的键成为 DataFrame 的列： 1 2 3 4 5 6 7 &amp;gt;&amp;gt;&amp;gt; data = {&amp;#39;col_1&amp;#39;: [3, 2, 1, 0], &amp;#39;col_2&amp;#39;: [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;d&amp;#39;]} &amp;gt;&amp;gt;&amp;gt; pd.DataFrame.from_dict(data) col_1 col_2 0 3 a 1 2 b 2 1 c 3 0 d 指定 orient=&#39;index&amp;rsquo; 使用字典键作为</description>
    </item>
    
    <item>
      <title>[笔记] pandas 填充缺失值</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-pandas-%E5%A1%AB%E5%85%85%E7%BC%BA%E5%A4%B1%E5%80%BC/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-pandas-%E5%A1%AB%E5%85%85%E7%BC%BA%E5%A4%B1%E5%80%BC/</guid>
      <description>前言 在数据分析过程中，我们除了滤除缺失值（有可能会丢弃跟它有关的其他数据），还可以采取填充的策略。对于大多数情况而言，最主要的方法是 pandas 的 fi</description>
    </item>
    
    <item>
      <title>[笔记] pandas 查看缺失值</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-pandas-%E6%9F%A5%E7%9C%8B%E7%BC%BA%E5%A4%B1%E5%80%BC/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-pandas-%E6%9F%A5%E7%9C%8B%E7%BC%BA%E5%A4%B1%E5%80%BC/</guid>
      <description>官方示例 pandas.DataFrame.isnull Show which entries in a DataFrame are NA. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 &amp;gt;&amp;gt;&amp;gt; df = pd.DataFrame({&amp;#39;age&amp;#39;: [5, 6, np.NaN], ... &amp;#39;born&amp;#39;: [pd.NaT, pd.Timestamp(&amp;#39;1939-05-27&amp;#39;), ... pd.Timestamp(&amp;#39;1940-04-25&amp;#39;)], ... &amp;#39;name&amp;#39;: [&amp;#39;Alfred&amp;#39;, &amp;#39;Batman&amp;#39;, &amp;#39;&amp;#39;], ... &amp;#39;toy&amp;#39;: [None, &amp;#39;Batmobile&amp;#39;, &amp;#39;Joker&amp;#39;]}) &amp;gt;&amp;gt;&amp;gt; df age born name toy 0 5.0 NaT Alfred None 1 6.0 1939-05-27 Batman Batmobile 2 NaN 1940-04-25</description>
    </item>
    
    <item>
      <title>[笔记] pandas 添加修改数据</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-pandas-%E6%B7%BB%E5%8A%A0%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-pandas-%E6%B7%BB%E5%8A%A0%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE/</guid>
      <description>前言 以下内容主要来自这篇文章： Pandas 数据添加修改 正文 数据分析过程中，对数据的修改调整也是比较多的，最简单的如学生成绩表加一列把总分算出来。根据某</description>
    </item>
    
    <item>
      <title>[笔记] pandas 滤除缺失值</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-pandas-%E6%BB%A4%E9%99%A4%E7%BC%BA%E5%A4%B1%E5%80%BC/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-pandas-%E6%BB%A4%E9%99%A4%E7%BC%BA%E5%A4%B1%E5%80%BC/</guid>
      <description>介绍 pandas 滤除缺失值的办法有很多种，我们可以通过 pandas.isnull 或布尔索引的手工方法，但 dropna 可能会更实用一些。 pandas.DataFrame.dropna() 方法通过丢弃包含空值的行或列，从 DataFrame 中删除缺失值。</description>
    </item>
    
    <item>
      <title>[笔记] pandas 相关性分析</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-pandas-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-pandas-%E7%9B%B8%E5%85%B3%E6%80%A7%E5%88%86%E6%9E%90/</guid>
      <description>介绍 在数据分析时，经常会针对两个变量进行相关性分析。在 Python 中的常用方法是 pandas 的 corr() 方法和 scatter_matrix 方法 。 方法 说明 pandas.DataFrame.corr() 计算每列两两之间的相似度，返回 DataFrame pandas.Series.corr() 计算该</description>
    </item>
    
    <item>
      <title>[笔记] sklearn 分层抽样</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-sklearn-%E5%88%86%E5%B1%82%E6%8A%BD%E6%A0%B7/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-sklearn-%E5%88%86%E5%B1%82%E6%8A%BD%E6%A0%B7/</guid>
      <description>官方文档 sklearn.model_selection.StratifiedShuffleSplit https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.StratifiedShuffleSplit.html 基本语法 sklearn.model_selection.StratifiedShuffleSplit(n_splits=10, ***, test_size=None, train_size=None, random_state=None) 一般形式 StratifiedShuffleSplit(n_splits=5, test_size=0.5, random_state=0) 参数说明 官方示例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 &amp;gt;&amp;gt;&amp;gt; import numpy as np &amp;gt;&amp;gt;&amp;gt; from sklearn.model_selection import StratifiedShuffleSplit &amp;gt;&amp;gt;&amp;gt; X = np.array([[1, 2], [3, 4],</description>
    </item>
    
    <item>
      <title>[笔记] sklearn 划分数据集</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-sklearn-%E5%88%92%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-sklearn-%E5%88%92%E5%88%86%E6%95%B0%E6%8D%AE%E9%9B%86/</guid>
      <description>官方文档 sklearn.model_selection.train_test_split 基本语法 sklearn.model_selection.train_test_split(*arrays, **options) 一般形式 train_test_split(data , test_size=0.2, random_state=42) 参数说明 *arrays：可以是 lists, np.array, pd.DataFrame 参数 说明 test_size float，取值范围为[0,1]，代表测试集占总数据集的</description>
    </item>
    
    <item>
      <title>[笔记] sklearn 填充缺失值</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-sklearn-%E5%A1%AB%E5%85%85%E7%BC%BA%E5%A4%B1%E5%80%BC/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-27-%E7%AC%94%E8%AE%B0-sklearn-%E5%A1%AB%E5%85%85%E7%BC%BA%E5%A4%B1%E5%80%BC/</guid>
      <description>介绍 SimpleImputer 类提供了估算缺失值的基本策略。缺失值可以用提供的常量值来计算， 或使用缺失值所在的每一列的统计数据(平均值、中位数或最频繁)。该类还允许</description>
    </item>
    
    <item>
      <title>[笔记] 利用 Python 进行数据分析_第 0 章_序言</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-09-%E7%AC%94%E8%AE%B0-%E5%88%A9%E7%94%A8python%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90_%E7%AC%AC0%E7%AB%A0_%E5%BA%8F%E8%A8%80/</link>
      <pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-09-%E7%AC%94%E8%AE%B0-%E5%88%A9%E7%94%A8python%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90_%E7%AC%AC0%E7%AB%A0_%E5%BA%8F%E8%A8%80/</guid>
      <description>序言 [利用Python进行数据分析.第2版 目录 第0章 序言 第1章 准备工作 第2章 Python语法基础，IPython和Jupyter Notebooks 第3章 Py</description>
    </item>
    
    <item>
      <title>[笔记] 利用 Python 进行数据分析_第 2 版</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-09-%E7%AC%94%E8%AE%B0-%E5%88%A9%E7%94%A8-python-%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90_%E7%AC%AC-2-%E7%89%88/</link>
      <pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-09-%E7%AC%94%E8%AE%B0-%E5%88%A9%E7%94%A8-python-%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90_%E7%AC%AC-2-%E7%89%88/</guid>
      <description>全书共 16 章</description>
    </item>
    
    <item>
      <title>[笔记] 周志华_机器学习_第 00 章_</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-09-%E7%AC%94%E8%AE%B0-%E5%91%A8%E5%BF%97%E5%8D%8E_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-09-%E7%AC%94%E8%AE%B0-%E5%91%A8%E5%BF%97%E5%8D%8E_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</guid>
      <description>1 机器学习基础 第 01 章 绪论 第 02 章 模型评估与选择 第 03 章 线性模型 2 机器学习方法 第 04 章 决策树 第 05 章 神经网络 第 06 章 支持向量机 第 07 章 贝叶斯分类器 第 08 章 集</description>
    </item>
    
    <item>
      <title>[笔记] 周志华_机器学习_第 01 章_绪论</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-09-%E7%AC%94%E8%AE%B0-%E5%91%A8%E5%BF%97%E5%8D%8E_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0_%E7%AC%AC-01-%E7%AB%A0_%E7%BB%AA%E8%AE%BA/</link>
      <pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-09-%E7%AC%94%E8%AE%B0-%E5%91%A8%E5%BF%97%E5%8D%8E_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0_%E7%AC%AC-01-%E7%AB%A0_%E7%BB%AA%E8%AE%BA/</guid>
      <description>傍晚小街路面上沁出微雨后的湿润，和熙的细风吹来，抬头看看天边的晚霞，嗯，明天又是一个好天气。走到水果摊旁，挑了个根蒂蜷缩、敲起来声音浊响的青</description>
    </item>
    
    <item>
      <title>[笔记] 周志华_机器学习_第 02 章_模型评估与选择</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-09-%E7%AC%94%E8%AE%B0-%E5%91%A8%E5%BF%97%E5%8D%8E_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0_%E7%AC%AC-02-%E7%AB%A0_%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E4%B8%8E%E9%80%89%E6%8B%A9/</link>
      <pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-09-%E7%AC%94%E8%AE%B0-%E5%91%A8%E5%BF%97%E5%8D%8E_%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0_%E7%AC%AC-02-%E7%AB%A0_%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0%E4%B8%8E%E9%80%89%E6%8B%A9/</guid>
      <description>2.1 误差与过拟合 我们将学习器对样本的实际预测结果与样本的真实值之间的差异成为：误差（error）。定义： 在训练集上的误差称为训练误差（trai</description>
    </item>
    
    <item>
      <title>[转载] SQL 窗口函数的优化和执行</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-08-%E8%BD%AC%E8%BD%BD-sql-%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0%E7%9A%84%E4%BC%98%E5%8C%96%E5%92%8C%E6%89%A7%E8%A1%8C/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-08-%E8%BD%AC%E8%BD%BD-sql-%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0%E7%9A%84%E4%BC%98%E5%8C%96%E5%92%8C%E6%89%A7%E8%A1%8C/</guid>
      <description>SQL 窗口函数的优化和执行 https://ericfu.me/sql-window-function/ 转载说明 本文转载自 Eric Fu 的博客，原文链接 SQL 窗口函数的优化和执行 。 转载时，做了一些文字上的修订。在以后阅读时，会继续文本</description>
    </item>
    
    <item>
      <title>[转载] 使用 Hive SQL 的窗口函数进行商务数据分析</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-08-%E8%BD%AC%E8%BD%BD-%E4%BD%BF%E7%94%A8-hive-sql-%E7%9A%84%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0%E8%BF%9B%E8%A1%8C%E5%95%86%E5%8A%A1%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-08-%E8%BD%AC%E8%BD%BD-%E4%BD%BF%E7%94%A8-hive-sql-%E7%9A%84%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0%E8%BF%9B%E8%A1%8C%E5%95%86%E5%8A%A1%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</guid>
      <description>前言 本文转载自 Jmx&amp;rsquo;s Blog，原文链接： 使用Hive SQL的窗口函数进行商务数据分析 。 转载时，做了一些文字和格式上的修订，在以后阅读时，会继续修</description>
    </item>
    
    <item>
      <title>[笔记] SQL 力扣练习</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-07-%E7%AC%94%E8%AE%B0-sql-%E5%8A%9B%E6%89%A3%E7%BB%83%E4%B9%A0/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-07-%E7%AC%94%E8%AE%B0-sql-%E5%8A%9B%E6%89%A3%E7%BB%83%E4%B9%A0/</guid>
      <description>前言 本文主要记录个人的 LeeCode 数据库练习过程，内容通常包含以下几个部分：题目简述、解题思路、逻辑步骤、重要知识点、个人犯的错误和正确的 SQL 代码。练习</description>
    </item>
    
    <item>
      <title>[笔记] SQL 窗口函数总结</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-10-01-%E7%AC%94%E8%AE%B0-sql-%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-10-01-%E7%AC%94%E8%AE%B0-sql-%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/</guid>
      <description>更新说明 2020-10-10 新增 使用 Hive SQL 的窗口函数进行商务数据分析 2020-10-01 新增 MySQL 窗口函数 2020-10-01 修订 部分文字和排版 1. 窗口函数的简介 窗口函数是为了实现 OLAP 而添加的标准 SQL 功能，</description>
    </item>
    
    <item>
      <title>[分享] 豆瓣十佳电影推荐</title>
      <link>https://xy19950225.github.io/hugo-blog/post/2020-09-14-%E5%88%86%E4%BA%AB-%E8%B1%86%E7%93%A3%E5%8D%81%E4%BD%B3%E7%94%B5%E5%BD%B1/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xy19950225.github.io/hugo-blog/post/2020-09-14-%E5%88%86%E4%BA%AB-%E8%B1%86%E7%93%A3%E5%8D%81%E4%BD%B3%E7%94%B5%E5%BD%B1/</guid>
      <description>前言 我的个人豆瓣&amp;quot;十佳&amp;quot;电影榜单 基于我的豆瓣电影标记数据，依据评分、人数、个人偏好等综合考量（统计截至 2020-10-0</description>
    </item>
    
  </channel>
</rss>